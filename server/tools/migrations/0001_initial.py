# Generated by Django 4.1.4 on 2022-12-09 08:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.PositiveIntegerField(null=True, verbose_name='Серийный номер электросчетчика')),
                ('generation', models.BooleanField(verbose_name='Выработка электроэнергии')),
                ('address', models.PositiveIntegerField(null=True, verbose_name='ModBus адрес')),
                ('polling', models.BooleanField(verbose_name='Опрос устройства')),
                ('coefficient', models.PositiveIntegerField(null=True, verbose_name='Коэфициент трансформации')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Электросчетчик',
                'verbose_name_plural': 'Электросчетчики',
                'ordering': ['-model', '-name', '-location', '-serial', '-typeconnection', '-host', '-port'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=16, verbose_name='IP-адрес')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'IP-адрес',
                'verbose_name_plural': 'IP-адресса',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Место установки')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Место установки',
                'verbose_name_plural': 'Места установки',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Модель электросчетчика')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Модель электросчетчика',
                'verbose_name_plural': 'Модели электросчетчиков',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование узла')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Наименование узла',
                'verbose_name_plural': 'Наименования узлов',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=16, verbose_name='Параметр')),
                ('rname', models.CharField(db_index=True, max_length=100, null=True, verbose_name='Наименование параметра')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Параметр',
                'verbose_name_plural': 'Параметры',
                'ordering': ['-rname'],
            },
        ),
        migrations.CreateModel(
            name='Periods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=16, verbose_name='Интервал времени')),
                ('rname', models.CharField(db_index=True, max_length=100, null=True, verbose_name='Наименование интервала времени')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Интервал времени',
                'verbose_name_plural': 'Интервалы времени',
                'ordering': ['-rname'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField(db_index=True, verbose_name='IP-порт')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'IP-порт',
                'verbose_name_plural': 'IP-порты',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='TypeConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Тип соединения')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Тип соединения',
                'verbose_name_plural': 'Типы соединений',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Propertys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eyear', models.FloatField(null=True, verbose_name='Накопленная энергия за год')),
                ('emonth', models.FloatField(null=True, verbose_name='Накопленная энергия за месяц')),
                ('eday', models.FloatField(null=True, verbose_name='Накопленная энергия день')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
                ('electricmeter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.electricmeter', verbose_name='Электросчетчик')),
                ('options', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.options', verbose_name='Параметр энергии')),
            ],
            options={
                'verbose_name': 'Показания',
                'verbose_name_plural': 'Показания',
                'ordering': '',
            },
        ),
        migrations.CreateModel(
            name='Indications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_plus', models.FloatField(null=True, verbose_name='Положительная активная энергия')),
                ('active_minus', models.FloatField(null=True, verbose_name='Отрицательная активная энергия')),
                ('reactive_plus', models.FloatField(null=True, verbose_name='Положительная реактивная энергия')),
                ('reactive_minus', models.FloatField(null=True, verbose_name='Отрицательная реактивная энергия')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата изменения')),
                ('electricmeter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.electricmeter', verbose_name='Электросчетчик')),
                ('period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.periods', verbose_name='Интервал времени')),
            ],
            options={
                'verbose_name': 'Показание электроэнергии',
                'verbose_name_plural': 'Показания электроэнергии',
                'ordering': '',
            },
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.host', verbose_name='IP-адрес'),
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.location', verbose_name='Место установки'),
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.model', verbose_name='Модель электросчетчика'),
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.name', verbose_name='Наименование узла'),
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.port', verbose_name='IP-порт'),
        ),
        migrations.AddField(
            model_name='electricmeter',
            name='typeconnection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tools.typeconnection', verbose_name='Тип соединения'),
        ),
    ]
